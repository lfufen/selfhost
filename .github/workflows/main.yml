# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: Klemensas/action-autotag@stable
        with:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ steps.package-version.outputs.current-version}}
          release_name: Release ${{ steps.package-version.outputs.current-version}}
          draft: false
          prerelease: false
      - name: Publish if version has been updated
        uses: pascalgn/npm-publish-action@1.3.9
        with: # All of theses inputs are optional
          tag_name: nightly-${{ steps.package-version.outputs.current-version}}
          tag_message: nightly-${{ steps.package-version.outputs.current-version}}
          commit_pattern: "^Release (\\S+)"
          workspace: '.'
          publish_command: 'yarn'
          publish_args: '--non-interactive'
        env: # More info about the environment variables in the README
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this as is, it's automatically generated
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # You need to set this in your repo settings
